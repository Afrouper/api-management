services:
  kong-database:
    image: postgres:16
    container_name: kong-database
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kongpass
    networks:
      - kong-net
    volumes:
      - kong-data:/var/lib/postgresql/data

  kong-migrations:
    image: kong:3.8
    container_name: kong-migrations
    command: kong migrations bootstrap
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
    networks:
      - kong-net
    depends_on:
      - kong-database

  kong-control-plane:
    image: kong:3.8
    container_name: kong-control-plane
    environment:
      KONG_ROLE: control_plane
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kongpass
      KONG_PASSWORD: adminPass
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_CLUSTER_LISTEN: '0.0.0.0:8005 ssl'
      KONG_CLUSTER_CERT: '/etc/kong/certs/kong-cluster.crt'
      KONG_CLUSTER_CERT_KEY: '/etc/kong/certs/kong-cluster.key'
      KONG_CLUSTER_CONTROL_PLANE: 'kong-control-plane:8005'
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_ADMIN_GUI_URL: http://localhost:8002
    ports:
      - "8005:8005"  # Cluster communication
      - "8001:8001"  # Admin API
      - "8444:8444"  # Admin API SSL
      - "8002:8002"  # Kong Manager UI
      - "8445:8445"  # Kong Manager UI SSL
    volumes:
      - ./kong-cluster.crt:/etc/kong/certs/kong-cluster.crt
      - ./kong-cluster.key:/etc/kong/certs/kong-cluster.key
    networks:
      - kong-net
    depends_on:
      - kong-migrations

  kong-data-plane:
    image: kong:3.8
    container_name: kong-data-plane
    environment:
      KONG_ROLE: data_plane
      KONG_DATABASE: off
      KONG_CLUSTER_CONTROL_PLANE: 'kong-control-plane:8005'
      KONG_CLUSTER_SERVER_NAME: 'kong_clustering'
      KONG_CLUSTER_CERT: '/etc/kong/certs/kong-cluster.crt'
      KONG_CLUSTER_CERT_KEY: '/etc/kong/certs/kong-cluster.key'
    ports:
      - "8000:8000"  # Proxy
      - "8443:8443"  # Proxy SSL
    volumes:
      - ./kong-cluster.crt:/etc/kong/certs/kong-cluster.crt
      - ./kong-cluster.key:/etc/kong/certs/kong-cluster.key
    networks:
      - kong-net
    depends_on:
      - kong-control-plane

  keycloak-database:
    image: postgres:16
    volumes:
      - postgres_keycloak_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    networks:
      - keycloak_network

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    command: start
    environment:
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8080
      KC_HOSTNAME_STRICT_BACKCHANNEL: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HEALTH_ENABLED: true
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-database/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: keycloak
    ports:
      - 8080:8080
    restart: always
    depends_on:
      - keycloak-database
    networks:
      - keycloak_network
      - kong-net

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yaml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    depends_on:
      - kong-control-plane
    networks:
      - kong-net

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - ./grafana:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    networks:
      - kong-net

  consul:
    image: bitnami/consul:latest
    networks:
      - kong-net
    ports:
      - '8300:8300'
      - '8301:8301'
      - '8301:8301/udp'
      - '8500:8500'
      - '8600:8600'
      - '8600:8600/udp'
    volumes:
      - 'consul_data:/bitnami'

  echo1:
    image: afrouper/echo-service:latest
    container_name: echo1
    environment:
      echo_service_port: "8081"
      instance_name: "echo1"
    networks:
      - kong-net

  echo2:
    image: afrouper/echo-service:latest
    container_name: echo2
    environment:
      echo_service_port: "8082"
      instance_name: "echo2"
    networks:
      - kong-net

  echo3:
    image: afrouper/echo-service:latest
    container_name: echo3
    environment:
      echo_service_port: "8083"
      instance_name: "echo3"
    networks:
      - kong-net

networks:
  kong-net:
    driver: bridge
  keycloak_network:
    driver: bridge

volumes:
  kong-data:
  prom_data:
  postgres_keycloak_data:
  consul_data:
